{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Towards a reusable NDK channel handling example","body":"### Welcome to Enviro!\r\n\r\nAfter many fails, times i thought I succeeded and fails again when it comes to properly implementing channel handling in some of my custom ops I thought I’d start a public exercise to get a re-usable template for this specific case.\r\nI will make all my findings public as well as share the final result and I am eager to get any input anyone might have. Be it functional, correcting bugs or tuning performance/efficiency.\r\n\r\nSo as a starting point I will describe what the node is supposed to do and what kind of cases it should correctly handle. Of course I might be missing obvious cases, so please do add whatever you find useful.\r\n\r\nIn order to make this not only an academic exercise I thought of the following use-case (yet to be determined if implementing the actual calculations is part of the exercise):\r\n\r\nAn Environment Reflection node similar to Ivan’s EnvReflection on Nukepedia (http://www.nukepedia.com/plugins/other/envreflection/)\r\nThe node uses P and N passes as well as a camera and an environment map to generate an environment reflection pass.\r\n\r\nWhile the node works fine as is, I want our implementation to pull N and P from layers in input0 rather than being separate inputs.\r\nIn addition I want to make it the user’s choice if he wants to overwrite RGB, any other channel or send the result to a totally new channel.\r\n\r\nSo here is a quick run-down:\r\n\r\n* From input0 copy all unused channels to output, also copy all un-changed inputs to output (we’re going to read from N and P, but not change it usually)\r\n* From input0 grab 2 layers (N and P respectively)\r\n* Make sure the 2 layers have 3 channels and grab them (also copy them to output unless the user selected one of the two as output layer\r\n* From input1 pull the environment map (obviously this SHOULD be a different input)\r\n* From input2 pull the camera data (optional: pull it from metadata in input0 eventually)\r\n* Output our result to a user selectable layer/channelset. If it exists, overwrite it. If not create a new one obviously.\r\n\r\nAll this should be implemented as an Iop and possibly allow us to sample more pixels (for multi- and super-sampling) in a later version. As a start i will provide a basic implementation (without any real calculations, only doing some debug output). From there i will try to get all the channel handling properly set up and reliable also in bigger and huge production scripts.","name":"Enviro","google":""}